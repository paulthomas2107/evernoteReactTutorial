[{"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/index.js":"1","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/App.js":"2","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/reportWebVitals.js":"3","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebar/sidebar.js":"4","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebar/styles.js":"5","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/editor/editor.js":"6","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/editor/styles.js":"7","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/helpers.js":"8","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebaritem/sidebaritem.js":"9","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebaritem/styles.js":"10"},{"size":709,"mtime":1609515375067,"results":"11","hashOfConfig":"12"},{"size":3035,"mtime":1609593431912,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609446697483,"results":"14","hashOfConfig":"12"},{"size":2434,"mtime":1609543703853,"results":"15","hashOfConfig":"12"},{"size":1163,"mtime":1609531137278,"results":"16","hashOfConfig":"12"},{"size":1407,"mtime":1609539627804,"results":"17","hashOfConfig":"12"},{"size":708,"mtime":1609520445279,"results":"18","hashOfConfig":"12"},{"size":380,"mtime":1609515521999,"results":"19","hashOfConfig":"12"},{"size":1413,"mtime":1609536687586,"results":"20","hashOfConfig":"12"},{"size":280,"mtime":1609520528642,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ruyo8r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/index.js",[],["45","46"],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/App.js",["47"],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/reportWebVitals.js",[],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebar/sidebar.js",["48"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SidebarItemComponent from \"../sidebaritem/sidebaritem\";\nimport { TheatersOutlined } from \"@material-ui/icons\";\n\nclass SidebarComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addingNote: false,\n      title: null,\n    };\n  }\n\n  render() {\n    const { notes, classes, selectedNoteIndex } = this.props;\n\n    if (notes) {\n      return (\n        <div className={classes.sidebarContainer}>\n          <Button onClick={this.newNoteBtnClick} className={classes.newNoteBtn}>\n            {this.state.addingNote ? \"Cancel\" : \"New Note\"}\n          </Button>\n          {this.state.addingNote ? (\n            <div>\n              <input\n                type=\"text\"\n                className={classes.newNoteInput}\n                placeholder=\"Enter Note Title...\"\n                onKeyUp={(e) => this.updateTitle(e.target.value)}\n              ></input>\n              <Button\n                className={classes.newNoteSubmitBtn}\n                onClick={this.newNote}\n              >\n                Submit Note\n              </Button>\n            </div>\n          ) : null}\n          <List>\n            {notes.map((_note, _index) => {\n              return (\n                <div key={_index}>\n                  <SidebarItemComponent\n                    _note={_note}\n                    _index={_index}\n                    selectedNoteIndex={selectedNoteIndex}\n                    selectNote={this.selectNote}\n                    deleteNote={this.deleteNote}\n                  ></SidebarItemComponent>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  newNoteBtnClick = () => {\n    console.log(\"New Note BTN Clicked\");\n    this.setState({ title: null, addingNote: !this.state.addingNote });\n  };\n\n  updateTitle = (txt) => {\n    this.setState({ title: txt });\n  };\n\n  newNote = () => {\n    this.props.newNote(this.state.title);\n    this.setState({ title: null, addingNote: false });\n  };\n\n  selectNote = (n, i) => this.props.selectNote(n, i);\n\n  deleteNote = (note) => this.props.deleteNote(note);\n}\n\nexport default withStyles(styles)(SidebarComponent);\n","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebar/styles.js",[],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/editor/editor.js",["49"],"import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nclass EditorComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      title: \"\",\n      id: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      text: this.props.selectedNote.body,\n      title: this.props.selectedNote.title,\n      id: this.props.selectedNote.id,\n    });\n  };\n\n  componentDidUpdate = () => {\n    if (this.props.selectedNote.id !== this.state.id) {\n      this.setState({\n        text: this.props.selectedNote.body,\n        title: this.props.selectedNote.title,\n        id: this.props.selectedNote.id,\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.editorContainer}>\n        <ReactQuill\n          value={this.state.text}\n          onChange={this.updateBody}\n        ></ReactQuill>\n      </div>\n    );\n  }\n\n  updateBody = async (val) => {\n    await this.setState({ text: val });\n    this.update();\n  };\n\n  update = debounce(() => {\n    this.props.noteUpdate(this.state.id, {\n      title: this.state.title,\n      body: this.state.text,\n    });\n  }, 1500);\n}\n\nexport default withStyles(styles)(EditorComponent);\n","/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/editor/styles.js",[],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/helpers.js",[],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebaritem/sidebaritem.js",[],"/Users/paulthomas/reactEvernoteClone/evernote-tutorial/src/sidebaritem/styles.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":7,"column":10,"nodeType":"56","messageId":"57","endLine":7,"endColumn":26},{"ruleId":"54","severity":1,"message":"59","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":23},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TheatersOutlined' is defined but never used.","'BorderColorIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]